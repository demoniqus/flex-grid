
function ScrollerDefaultConfig()
{
    /**
     * С помощью этой функции можно предоставить пользователю образец конфига с пояснениями, а также
     * получить базовый конфиг для компонента, на который сверху можно наложить конфиг пользователя
     */
    return {
        _getElement: 'Метод, возвращающий DOM-объект для отображения пользователю. Используется при построчной загрузке данных с неизвестной заранее высотой строки.',
        getElement: function(/** @type {number} */index, /** @type {string} */direction){

        },
        _getElements: 'Метод, возвращающий массив DOM-объектов для отображения пользователю. Используется при пакетной загрузке данных с предопределенной высотой строк, передаваемой через параметр predefinedRowHeight',
        getElements: function(/** @type {number} */index, /** @type {number} */count){

        },
        // _direction: 'Способ прокрутки контейнера. По умолчанию - прокрутка в одном измерении, вертикальном',
        // direction: ScrollerConstants().directions.onlyVertical,
        _firstIndex: 'Индексный номер первого элемента в наборе. Можно задавать отличный от нуля, если предполагается выводить дополнительные элементы типа заголовков, не входящие в основной набор данных',
        firstIndex: 0,
        _itemsCount: 'Количество элементов',
        itemsCount: 0,
        _scrollSensitivity: 'Чувствительность скроллбара - количество пикселей, которые надо прокрутить для прокрутки на один элемент. Влияет на отображение полосы вертикальной прокрутки',
        scrollSensitivity: 10,
        _scrollStepSize: 'Количество прокручиваемых колесом мыши за один раз строк',
        scrollStepSize: 1,
        _noScrollbar: 'Не показывать полосу прокрутки',
        noScrollbar: false,
        _alwaysFillContainer: 'При прокрутке всегда стараться максимально заполнять контейнер данными. При false возможен вариант, когда в контейнере будет отображаться только последний элемент несмотря на наличие свободного места для вывода и предыдущих элементов',
        alwaysFillContainer: false,
        _minExpectedRowHeight: 'Для строк с данными есть минимальная ожидаемая высота. Вряд ли можно разместить данные в строке с высотой к примеру в 1-2 px. Поэтому , если в контейнере свободного места осталось меньше, нет смысла пытаться туда загрузить еще одну строку и тратить на это время  Данный параметр устанавливает минимально возможную ожидаемую высоту строк.',
        minExpectedRowHeight: 15,
        _predefinedRowHeight: 'Для строк таблицы задана предопределенная высота. В этом случае при прокрутке можно сразу определить, сколько строк поместятся в области просмотра',
        predefinedRowHeight: 0,
        // _minIndex: 'Минимально возможный индекс в наборе. При загрузке компонента Scroller не с первого элемента возникает ситуация, что под предыдущие элементы не выделяется никакого места и становится невозможно выполнить прокрутку вверх. Поэтому необходимо выделять место под "виртуальные" элементы, которые еще ни разу не были загружены в Scroller',
        // minIndex: 0, //TODO А нужен ли? Или всегда считать, что минимальный индекс равен нулю, т.к. индексы всегда числовые и всегда должны быть упорядоченными

        /*
		 *Элементы пагинации не ограничивают количество выводимых на страницу элементов. Они лишь помогают навигации и быстрой прокрутке
		 * к нужной точке набора элементов
		 *
		 */
        // pageSize: 10,
        // pagination: false,

    };
}

export {ScrollerDefaultConfig}
